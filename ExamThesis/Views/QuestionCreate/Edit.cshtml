@model ExamThesis.Models.CreateQuestion

<h2>Edit Question and Answers</h2>

<form asp-action="Edit" id="editForm">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="QuestionText" class="control-label"></label>
        <input asp-for="QuestionText" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="QuestionPoints" class="control-label"></label>
        <input asp-for="QuestionPoints" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="NegativePoints" class="control-label"></label>
        <input asp-for="NegativePoints" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="QuestionCategoryId" class="control-label"></label>
        <select asp-items="ViewBag.QuestionCategories" asp-for="QuestionCategoryId" class="form-control"></select>


    </div>

    <h4>Answers</h4>
    <div id="answers-container">
        @for (var i = 0; i < Model.Answers.Count; i++)
        {
            <div class="form-group answer-item" data-answer-id="@Model.Answers[i].Text">
                <label asp-for="Answers[i].Text" class="control-label"></label>
                <input asp-for="Answers[i].Text" class="form-control" />

                <label>
                    <input type="checkbox" asp-for="Answers[i].IsCorrect" />
                    Correct Answer
                </label>
            </div>
        }
    </div>
    <button type="button" class="btn btn-success" onclick="addAnswer()">Add Answer</button>
    <button type="button" class="btn btn-danger" onclick="removeAnswer(this)">Remove</button>
    <button type="submit" class="btn btn-primary" onclick="updateQuestion()">Save Changes</button>



    @section scripts {
        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script>
            function updateQuestion() {
                var formData = {
                    QuestionId: @Model.QuestionId,
                    QuestionText: $('#QuestionText').val(),
                    QuestionPoints: $('#QuestionPoints').val(),
                    NegativePoints: $('#NegativePoints').val(),
                    QuestionCategoryId: $('#QuestionCategoryId').val(),
                    Answers: []
                };
                // Loop through answers and add them to formData
                $('input[name^="Answers"]').each(function () {
                    var answerText = $(this).val();
                    var isCorrect = $(this).closest('.form-group').find('.answer-checkbox').prop('checked');

                    console.log('Answer Text:', answerText, 'IsCorrect:', isCorrect);

                    var answer = {
                        Text: answerText,
                        IsCorrect: isCorrect
                    };
                    formData.Answers.push(answer);
                });

                $.ajax({
                    url: '/QuestionCreate/Edit',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    traditional: true,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (data) {
                        // Επιτυχία, μπορείτε να εκτελέσετε επιπλέον κώδικα αν χρειάζεται
                        console.log('Success:', data);
                        window.location.href = '/QuestionCreate/Index';
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating question:', error);

                        // Εκτυπώστε περισσότερες πληροφορίες σφάλματος
                        console.log(xhr.responseText);
                    }
                });
            }
            function addAnswer() {
                var container = $('#answers-container');
                var index = container.children().length;

                // Κατασκευή νέας απάντησης ως HTML
                var newAnswerHtml = `
                                        <div class="form-group">
                                            <label for="Answers_${index}__Text" class="control-label">Answer ${index + 1}</label>
                                            <input type="text" name="Answers[${index}].Text" class="form-control" />
                                            <label>
                                                <input type="checkbox" class="answer-checkbox" name="Answers[${index}].IsCorrect" />
                                                Correct Answer
                                            </label>
                                        </div>
                                    `;

                // Προσθήκη της νέας απάντησης στο container
                container.append(newAnswerHtml);
            }

            function removeAnswer(button) {
                var container = $('#answers-container');
                var lastAnswer = container.children('.answer-item').last();

                if (lastAnswer.length > 0) {
                    var answerText = lastAnswer.find('input[name^="Answers"]').val();
                    console.log('Answer Text:', answerText); // Προσθήκη αυτής της γραμμής

                    if (answerText) {
                        // Καλέστε τη συνάρτηση διαγραφής απάντησης στον διακομιστή
                        deleteAnswer(answerText);
                    }

                    lastAnswer.remove(); // Κατάργηση του HTML
                }
            }

            function deleteAnswer(answerText) {
                var url = '/QuestionCreate/DeleteAnswer';

                $.ajax({
                    url: url,
                    type: 'DELETE',
                    data: { answerText: answerText },  // Αλλαγή εδώ
                    success: function (data) {
                        // Επιτυχημένος διαγραφής, μπορείτε να κάνετε επιπλέον ενέργειες αν χρειάζεται
                        console.log('Success:', data);
                    },
                    error: function (error) {
                        // Σφάλμα κατά τη διαγραφή, μπορείτε να κάνετε επιπλέον ενέργειες αν χρειάζεται
                        console.error('Error:', error);
                    }
                });
            }

          
        </script>
    }
</form>