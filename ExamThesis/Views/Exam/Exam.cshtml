@model IEnumerable<ExamThesis.Storage.ExamQuestionViewModel>

<div class="container">

    <form method="post" action="@Url.Action("Submit", new { id = ViewBag.ExamId })">
        <input type="hidden" name="userId" value="@ViewBag.UserId" />
        <h2 class="text-center">Εξέταση Εργαστηρίου</h2>
        <div class="p-3 text-center">
            <p>Χρόνος: <span id="timer" class="badge bg-primary"></span></p>
        </div>
        <input type="hidden" name="examId" value="@ViewBag.ExamId" />
         <div class="row">
            <div class="col-md-6 mb-3">
                <div class="card border-light">
                    <div class="card-body">
                        <h6 class ="card-title"> Αρχεία </h6>
                        @{
                            var displayedPackageIds = new HashSet<string>(); // Χρησιμοποιούμε string αντί για int
                        }
                        @foreach (var file in Model)
                        {
                            if (!displayedPackageIds.Contains(file.PackageId.ToString()))
                            {
                                displayedPackageIds.Add(file.PackageId.ToString());
                                <a href="@Url.Action("Download", "QuestionPackage", new { id = file.PackageId })">
                                    <button type="button" class="btn btn-outline-primary btn-sm">@file.PackageName</button>
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        @{
            int questionCounter = 1;
            char[] answerLetters = "abcdefghijklmnopqrstuvwxyz".ToCharArray();
        }
        @foreach (var question in Model)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h6 class="card-title">@questionCounter) @question.QuestionText</h6>
                    <br />
                    <div class="row">
                        @{
                            int answerCounter = 0;
                        }
                        @foreach (var answer in question.Answers)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="form-check">
                                    <input class="form-check-input answer-checkbox" type="checkbox" id="answer_@answer.Id" name="selectedAnswers" value="@answer.Id" data-question-id="@question.QuestionId">
                                    <label class="form-check-label" for="answer_@answer.Id">@answerLetters[answerCounter]) @answer.Text</label>
                                </div>
                            </div>
                            answerCounter++;
                        }
                    </div>
                </div>
            </div>
            <input type="hidden" name="selectedQuestions" value="@question.QuestionId" />
            questionCounter++;
        }
        <div style="clear:both"></div>
        <button type="submit" class="btn btn-primary">Submit Answers</button>
    </form>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.answer-checkbox').change(function () {
            // Απενεργοποίηση όλων των άλλων checkboxes με το ίδιο data-question-id
            var questionId = $(this).data('question-id');
            $('.answer-checkbox[data-question-id="' + questionId + '"]').not(this).prop('checked', false);
        });
    });
</script>
<script>

    $(document).ready(function () {
        var endTime = "@ViewBag.EndTime";
        // Προσθέτουμε την ημερομηνία της σημερινής ημέρας
        endTime = new Date(new Date().toDateString() + ' ' + endTime);

        function formatTime(milliseconds) {
            var hours = Math.floor(milliseconds / (1000 * 60 * 60));
            var minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);

            // Προσθήκη μηδέν μπροστά αν η τιμή είναι μικρότερη από 10
            var formattedHours = hours < 10 ? '0' + hours : hours;
            var formattedMinutes = minutes < 10 ? '0' + minutes : minutes;
            var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;

            return formattedHours + ":" + formattedMinutes + ":" + formattedSeconds;
        }

        // Υπολογίζουμε τον εναπομείναντα χρόνο
        var remainingTime = endTime - new Date();

        // Εμφανίζουμε τον εναπομείναντα χρόνο στο στοιχείο HTML με id "timer"
        $("#timer").text(formatTime(remainingTime));

        // Κάθε δευτερόλεπτο ενημερώνουμε τον εναπομείναντα χρόνο
        setInterval(function () {
            remainingTime = endTime - new Date(); // Υπολογίζουμε ξανά τον εναπομείναντα χρόνο
            $("#timer").text(formatTime(remainingTime)); // Εμφανίζουμε τον εναπομείναντα χρόνο
            if (remainingTime <= 0) {
                $("form").submit(); // Υποβολή της φόρμας
            }

        }, 1000); // Κάθε 1000 ms (1 δευτερόλεπτο) ενημερώνουμε τον χρόνο
    });
</script>
</script> 


