@model List<ExamThesis.Storage.Model.Exam>
@using ExamThesis.Controllers
@inject ExamThesis.Controllers.ExamController ExamController
@if (Model != null && Model.Any())
{
    <div class="row">
        @foreach (var exam in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@exam.ExamName</h5>
                        <p class="card-text">
                            <strong>Start Time:</strong> @exam.StartTime.ToString("dd/MM/yyyy HH:mm")<br />
                            <strong>End Time:</strong> @exam.EndTime.ToString("dd/MM/yyyy HH:mm")<br />
                            <strong>Total Points:</strong> @exam.TotalPoints<br />
                            <strong>Pass Grade:</strong> @exam.PassGrade
                        </p>


                        <a href="@Url.Action("Exam", new { id = exam.ExamId })" class="btn btn-primary">Start Exam</a>
                        @if (User.IsInRole("student"))
                        {
                            <a asp-controller="Exam" asp-action="Delete" asp-route-id="@exam.ExamId" class="btn btn-danger">Delete</a>
                            <a href="@Url.Action("ExportExamResultsToExcel", new { id = exam.ExamId })" class="btn btn-success">Export to Excel</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No exams available.</p>
}
@if (User.IsInRole("student"))
 {
<a href="@Url.Action("Create")" class="btn btn-success">Create Exam</a>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}
 